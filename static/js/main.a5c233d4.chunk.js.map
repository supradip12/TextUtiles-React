{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","heading","value","onChange","e","console","log","target","style","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","alert","split","map","loda","slice","join","length","prototype","PropTypes","string","isRequired","about","defaultProps","Alert","role","msg","App","setmode","setalert","message","setTimeout","document","body","background","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5c233d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n return (\r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n\r\n      </form> */}\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>   \r\n )\r\n}\r\n\r\nNavbar.prototype = {\r\n  title:PropTypes.string.isRequired,\r\n  about:PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps  = { title:'Set title here',\r\n                       about:'About text here'};\r\n","import React,{ useState } from 'react';\r\n\r\nexport default function Textform(props) {\r\n const [text, setText] = useState('');\r\n\r\n const handelOnChange = (e)=>{\r\n  console.log(\"On Change\");\r\n  setText(e.target.value)\r\n  \r\n }\r\n\r\n const handelUpClick = ()=>{\r\n  // console.log(\"Uppercase was Clicked \" + {text});\r\n  let newtext = text.toUpperCase();\r\n  setText(newtext);\r\n  props.showAlert(\"HandelUp ho gaya\",\"Success\");\r\n}\r\n\r\nconst handeldownClick = ()=>{\r\n  let newtext = text.toLowerCase();\r\n  setText(newtext);\r\n  props.showAlert(\"Handeldown ho gaya\",\"Success\");\r\n }\r\n\r\n const copy = ()=>{\r\n\r\n  let newtext=navigator.clipboard.writeText(text);\r\n  console.log(newtext);\r\n  alert(\"text copied successfully\");\r\n  props.showAlert(\"Copy ho gaya\",\"Success\");\r\n\r\n }\r\n\r\n const fupper = ()=>{\r\n    let newtext = text.split(\" \").map(loda=>{\r\n      return loda[0].toUpperCase() + loda.slice(1);\r\n     \r\n    });\r\n\r\n    setText(newtext.join(\" \"))\r\n    props.showAlert(\"Fupper ho gaya\",\"Success\")\r\n }\r\n\r\n return (\r\n   <>\r\n  <div className='container'>\r\n  <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handelOnChange}  style={{backgroundColor:props.mode === 'dark'?'grey':'white'}} id=\"mybox\" rows=\"8\"></textarea>\r\n</div>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={handelUpClick}>Convert to uppercase</button>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={handeldownClick}>Convert to lowercase</button>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={copy}>Copy Text</button>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={fupper}>first letter uppercase</button>\r\n  </div>\r\n\r\n  <div className=\"container my-3\">\r\n    <h1>Your text Summerry</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n\r\n    <p>{0.008 * text.split(\" \").length } minutes of read</p>\r\n  </div>\r\n  <h2>Preview</h2>\r\n\r\n  <p>{text.length>0?text:\"Enter your Text\"}</p>\r\n\r\n \r\n  \r\n   </>\r\n )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n \r\n return (\r\n \r\nprops.alert && <div className= {`alert alert-warning alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n \r\n</div>\r\n  \r\n )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n \n\nfunction App() {\n  const [mode, setmode] = useState('light'); // Whether dark mode is inable or not\n\n  const [alert, setalert] = useState(null);\n\n\n  const showAlert = (message,type)=>{\n      setalert({\n        msg:message,\n        type:type\n      })\n      setTimeout(() => {\n        setalert(null)\n      }, 2000);\n  }\n\n  const toogleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.background = '#042743';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enable\",\"success\");\n      document.title = 'TextUtiles - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtiles  is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'TextUtiles  loda';\n      // }, 1500);\n      \n    }\n\n    else{\n      setmode('light');\n      document.body.style.background = 'white';\n      document.body.style.color = 'black';\n      setalert(\"Light mode has been enable\",\"Success\");\n      document.title = 'TextUtiles - Light Mode'\n    }\n  }\n  return (  \n    <>     \n    {/* <Router> */}\n\n\n    <Navbar title=\"loda\" mode= {mode} toggleMode={toogleMode}/>\n    <Alert alert={alert}/>\n\n\n    <div className=\"container my-3\">\n\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>          \n          <Route exact path=\"/\"> */}\n            <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>            \n          {/* </Route>\n    </Switch> */}\n    \n\n    {/* <About/> */}\n    </div>\n    {/* </Router> */}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}